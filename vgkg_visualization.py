# -*- coding: utf-8 -*-
"""VGKG_Visualization

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18r6yAtV057owr0ySeoNnWb27AaPR8CO_

Mount drive
"""

from google.colab import drive
drive.mount('/content/drive')

"""Import essential libraries"""

import pandas as pd
import requests
import cv2 as cv
from google.colab.patches import cv2_imshow # for image display
from skimage import io
from urllib.request import urlopen

"""Make dataframe"""

df = pd.read_csv("/content/drive/MyDrive/2019-vgkg-protest-image-dataset-20191030-labels.csv/2019-vgkg-protest-image-dataset-20191030-labels.csv")

df.columns = ['TimeStamp', 'img_url', 'web_url']

df

"""Remove invalid URLs for a sample of the data"""

i = 0
image_urls = []

while i <= 25:
  i = i + 1
  try:
    urlopen(df.iat[i,1])
  except:
    continue
  image_urls.append(df.iat[i,1])

image_urls

"""IMAGE PROCESSING

Read image from URLs
"""

for url in image_urls:
  image = io.imread(url)
  image_2 = cv.cvtColor(image, cv.COLOR_BGR2RGB)
  cv2_imshow(image_2)
  print('\n')

"""Image contours and histograms"""

# Check the image matrix data type (could know the bit depth of the image)
print(image.dtype)
# Check the height of image
print(image.shape[0])
# Check the width of image
print(image.shape[1])
# Check the number of channels of the image
print(image.shape[2])

import matplotlib.pylab as plt

plt.hist(image.ravel(),bins = 256, range = [0,256])
plt.show()

color = ('b','g','r')
for i,col in enumerate(color):
    histr = cv.calcHist([image],[i],None,[256],[0,256])
    plt.plot(histr,color = col)
    plt.xlim([0,256])
plt.show()

myGrayImg = cv.cvtColor(image, cv.COLOR_BGR2GRAY)
cv2_imshow(myGrayImg)

plt.contour(myGrayImg, origin = "image")